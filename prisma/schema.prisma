generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String       @id @default(cuid())
  name          String
  email         String       @unique
  password      String
  role          Role         @default(USER)
  bids          Bid[]
  buyerRecords  AuctionLot[] @relation("BuyerRecords")
  sellerRecords AuctionLot[] @relation("SellerRecords")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model AuctionLot {
  id             String        @id @default(cuid())
  lotNumber      String        @unique
  title          String
  artistName     String
  yearOfCreation Int
  subject        Subject
  description    String
  estimatedPrice Float
  startingBid    Float
  auctionDate    DateTime
  images         String[]
  height         Float
  width          Float
  depth          Float? // Optional for carvings/sculptures
  bids           Bid[]
  buyer          User?         @relation("BuyerRecords", fields: [buyerId], references: [id])
  seller         User          @relation("SellerRecords", fields: [sellerId], references: [id])
  buyerId        String?
  sellerId       String
  status         AuctionStatus @default(PENDING) // Auction status
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Bid {
  id           String     @id @default(cuid())
  amount       Float
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  auctionLot   AuctionLot @relation(fields: [auctionLotId], references: [id])
  auctionLotId String
  createdAt    DateTime   @default(now())
}

enum Role {
  ADMIN
  USER
}

enum Subject {
  ANIMAL
  CAR
  PORTRAIT
  BUILDING
  ART
  OTHER
}

enum AuctionStatus {
  PENDING
  DONE
}
